// db module

# ----------- databases for main instance.

resource "google_sql_database" "demo_app_db" {
  name     = "demo_app"
  instance = google_sql_database_instance.stage_db_instance.name
  project  = var.project
}

resource "google_sql_database" "integration_task_manager" {
  name     = "integration_task_manager"
  instance = google_sql_database_instance.stage_db_instance.name
  project  = var.project
}

resource "google_sql_database" "integration_tasks_manager" {
  name     = "integration_tasks_manager"
  instance = google_sql_database_instance.stage_db_instance.name
  project  = var.project
}

resource "google_sql_database" "integry_stag_db" {
  name     = "integry_stag_db"
  instance = google_sql_database_instance.stage_db_instance.name
  project  = var.project
}

resource "google_sql_database" "prod_db" {
  name     = "prod_db"
  instance = google_sql_database_instance.stage_db_instance.name
  project  = var.project
}

resource "google_sql_database" "prod_db_1583246308" {
  name     = "prod_db_1583246308"
  instance = google_sql_database_instance.stage_db_instance.name
  project  = var.project
}

resource "google_sql_database" "queues_status" {
  name     = "queues_status"
  instance = google_sql_database_instance.stage_db_instance.name
  project  = var.project
}


# ----------- databases for clone instance.

resource "google_sql_database" "clone_demo_app" {
  name     = "demo_app"
  instance = google_sql_database_instance.stage_db_clone.name
  project  = var.project
}

resource "google_sql_database" "clone_integration_task_manager" {
  name     = "integration_task_manager"
  instance = google_sql_database_instance.stage_db_clone.name
  project  = var.project
}

resource "google_sql_database" "clone_integration_tasks_manager" {
  name     = "integration_tasks_manager"
  instance = google_sql_database_instance.stage_db_clone.name
  project  = var.project
}

resource "google_sql_database" "clone_integry_stag_db" {
  name     = "integry_stag_db"
  instance = google_sql_database_instance.stage_db_clone.name
  project  = var.project
}

resource "google_sql_database" "clone_prod_db" {
  name     = "prod_db"
  instance = google_sql_database_instance.stage_db_clone.name
  project  = var.project
}

resource "google_sql_database" "clone_prod_db_1583246308" {
  name     = "prod_db_1583246308"
  instance = google_sql_database_instance.stage_db_clone.name
  project  = var.project
}

resource "google_sql_database" "clone_queues_status" {
  name     = "queues_status"
  instance = google_sql_database_instance.stage_db_clone.name
  project  = var.project
}


# ----------- databases for replica instance.

resource "google_sql_database" "replica_demo_app" {
  name     = "demo_app"
  instance = google_sql_database_instance.stage_db_clone_replica.name
  project  = var.project

}

resource "google_sql_database" "replica_integration_task_manager" {
  name     = "integration_task_manager"
  instance = google_sql_database_instance.stage_db_clone_replica.name
  project  = var.project

}

resource "google_sql_database" "replica_integration_tasks_manager" {
  name     = "integration_tasks_manager"
  instance = google_sql_database_instance.stage_db_clone_replica.name
  project  = var.project

}

resource "google_sql_database" "replica_integry_stag_db" {
  name     = "integry_stag_db"
  instance = google_sql_database_instance.stage_db_clone_replica.name
  project  = var.project

}

resource "google_sql_database" "replica_prod_db" {
  name     = "prod_db"
  instance = google_sql_database_instance.stage_db_clone_replica.name
  project  = var.project

}

resource "google_sql_database" "replica_prod_db_1583246308" {
  name     = "prod_db_1583246308"
  instance = google_sql_database_instance.stage_db_clone_replica.name
  project  = var.project

}

resource "google_sql_database" "replica_queues_status" {
  name     = "queues_status"
  instance = google_sql_database_instance.stage_db_clone_replica.name
  project  = var.project

}



# ----------- main instance.

resource "google_sql_database_instance" "stage_db_instance" {
  name             = var.main_instance_name
  database_version = var.db_version
  project          = "integry-staging-backend"


  #depends_on = [var.db_depends_on]

  settings {
    activation_policy = "ALWAYS"
    availability_type = "ZONAL" # use "REGIONAL" for prod to distribute data storage across zones
    backup_configuration {
      backup_retention_settings {
        retained_backups = "7"
        retention_unit   = "COUNT"
      }
      binary_log_enabled             = "true"
      enabled                        = "true"
      location                       = "us"
      point_in_time_recovery_enabled = "false"
      start_time                     = "07:00"
      transaction_log_retention_days = "7"
    }
    crash_safe_replication = "false"

    database_flags {
      name  = "slow_query_log"
      value = "on"
    }

    database_flags {
      name  = "log_output"
      value = "FILE"
    }

    disk_autoresize       = "true"
    disk_autoresize_limit = "0"
    disk_size             = var.disk_size
    disk_type             = "PD_HDD"
    pricing_plan          = "PER_USE"
    replication_type      = "SYNCHRONOUS"
    tier                  = var.instance_type




    ip_configuration {
      authorized_networks {
        name  = "AMS أبو ظبي‎"
        value = "92.96.26.17"
      }

      authorized_networks {
        name  = "QueOptWorker1"
        value = "34.74.73.152"
      }

      authorized_networks {
        name  = "Anas-Zong-1"
        value = "111.119.187.59"
      }

      authorized_networks {
        name  = "AMS - IBA"
        value = "111.68.111.149"
      }

      authorized_networks {
        name  = "AMS"
        value = "185.217.117.85"
      }

      authorized_networks {
        name  = "Hassaan"
        value = "103.217.176.41"
      }
      ipv4_enabled    = "true"                                                     # don't give the db a public IPv4
      private_network = "projects/integry-staging-backend/global/networks/default" # the VPC where the db will be assigned a private IP
      require_ssl     = "false"
    }

    location_preference {
      zone = "us-east1-b"
    }


    maintenance_window {
      day  = "6"
      hour = "19"
    }



  }
}

# ----------- clone instance.

resource "google_sql_database_instance" "stage_db_clone" {
  name             = var.clone_instance_name
  database_version = var.db_version
  project          = "integry-staging-backend"


  settings {
    activation_policy = "ALWAYS"
    availability_type = "ZONAL" # use "REGIONAL" for prod to distribute data storage across zones
    backup_configuration {
      backup_retention_settings {
        retained_backups = "7"
        retention_unit   = "COUNT"
      }
      binary_log_enabled             = "true"
      enabled                        = "true"
      location                       = "us"
      point_in_time_recovery_enabled = "false"
      start_time                     = "07:00"
      transaction_log_retention_days = "7"
    }
    crash_safe_replication = "false"

    database_flags {
      name  = "slow_query_log"
      value = "on"
    }

    database_flags {
      name  = "log_output"
      value = "FILE"
    }

    disk_autoresize       = "true"
    disk_autoresize_limit = "0"
    disk_size             = var.disk_size
    disk_type             = "PD_HDD"
    pricing_plan          = "PER_USE"
    replication_type      = "SYNCHRONOUS"
    tier                  = var.instance_type




    ip_configuration {
      authorized_networks {
        name  = "AMS"
        value = "185.217.117.85"
      }

      authorized_networks {
        name  = "QueOptWorker1"
        value = "34.74.73.152"
      }

      authorized_networks {
        name  = "AMS أبو ظبي‎"
        value = "92.96.26.17"
      }

      authorized_networks {
        name  = "AMS - IBA"
        value = "111.68.111.149"
      }

      authorized_networks {
        name  = "Anas-Zong-1"
        value = "111.119.187.59"
      }

      authorized_networks {
        name  = "Replica-Connector"
        value = "104.197.70.140"
      }

      authorized_networks {
        name  = "Ahmed"
        value = "206.84.141.62"
      }

      authorized_networks {
        name  = "Hassaan"
        value = "103.217.176.41"
      }

      ipv4_enabled    = "true"
      private_network = "projects/integry-staging-backend/global/networks/default"
      require_ssl     = "false"
    }

    location_preference {
      zone = "us-east1-b"
    }
  }
}

# ----------- replica instance.

resource "google_sql_database_instance" "stage_db_clone_replica" {
  name                 = var.replica_instance_name
  master_instance_name = var.clone_instance_name
  database_version     = var.db_version
  project              = "integry-staging-backend"


  replica_configuration {
    connect_retry_interval    = "0"
    failover_target           = "false"
    master_heartbeat_period   = "0"
    verify_server_certificate = "false"
  }

  settings {
    activation_policy = "ALWAYS"
    availability_type = "ZONAL" # use "REGIONAL" for prod to distribute data storage across zones

    backup_configuration {
      backup_retention_settings {
        retained_backups = "7"
        retention_unit   = "COUNT"
      }
      binary_log_enabled             = "false"
      enabled                        = "false"
      point_in_time_recovery_enabled = "false"
      start_time                     = "07:00"
      transaction_log_retention_days = "7"
    }

    crash_safe_replication = "true"

    database_flags {
      name  = "slow_query_log"
      value = "on"
    }

    database_flags {
      name  = "log_output"
      value = "FILE"
    }

    disk_autoresize       = "true"
    disk_autoresize_limit = "0"
    disk_size             = var.disk_size
    disk_type             = "PD_HDD"
    pricing_plan          = "PER_USE"
    replication_type      = "SYNCHRONOUS"
    tier                  = var.instance_type
    ip_configuration {
      authorized_networks {
        name  = "Anas-Zong-1"
        value = "111.119.187.59"
      }

      authorized_networks {
        name  = "AMS - IBA"
        value = "111.68.111.149"
      }

      authorized_networks {
        name  = "Ahmed"
        value = "206.84.141.62"
      }

      authorized_networks {
        name  = "Hassaan"
        value = "103.217.176.41"
      }

      authorized_networks {
        name  = "Replica-Connector"
        value = "104.197.70.140"
      }

      authorized_networks {
        name  = "AMS أبو ظبي‎"
        value = "92.96.26.17"
      }

      authorized_networks {
        name  = "AMS"
        value = "185.217.117.85"
      }

      authorized_networks {
        name  = "QueOptWorker1"
        value = "34.74.73.152"
      }

      ipv4_enabled    = "true"
      private_network = "projects/integry-staging-backend/global/networks/default"
      require_ssl     = "false"
    }

    location_preference {
      zone = "us-east1-b"
    }
  }

}

# below are already imported into statfile at bucket integry-tf-state/stage/gcp/module,
# commenting them out since, do not have passwords for them, becasue of this
# tf plan will suggest re-creating these users, please advise access on password access and cloudsqsl user perms, thanks! 


# resource "google_sql_user" "stag_db" {
#   name     = "stag_db"
#   instance = google_sql_database_instance.stage_db_instance.name
# }

# resource "google_sql_user" "django" {
#   name     = "django"
#   instance = google_sql_database_instance.stage_db_instance.name
# }

# resource "google_sql_user" "root" {
#   name     = "root"
#   instance = google_sql_database_instance.stage_db_instance.name
# }

# resource "google_sql_user" "root_simple_pass" {
#   name     = "root_simple_pass"
#   instance = google_sql_database_instance.stage_db_instance.name
# }
